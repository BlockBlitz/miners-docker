name: Build Rqiner

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"

env:
  REGISTRY: ghcr.io
  ORG_NAME: blockblitz
  IMAGE_NAME: rqiner
  DOCKER_CONTEXT: ./rqiner/.

jobs:
  check_ver:
    name: Check Release is Built
    runs-on: ubuntu-latest
    steps:
    - id: lastrelease 
      name: Get Latest Release
      uses: pozetroninc/github-action-get-latest-release@v0.7.0
      with:
        repository: Qubic-Solutions/rqiner-builds
    - id: releaseexists
      name: Check Package Builds
      uses: tyriis/docker-image-tag-exists@v2.0.0
      with:
        registry: ${{ env.REGISTRY }}
        repository: ${{ env.ORG_NAME }}/${{ env.IMAGE_NAME }}
        tag: ${{ steps.lastrelease.outputs.release }}
    outputs:
      image-exists: ${{ steps.releaseexists.outputs.tag }}
      release-ver: ${{ steps.lastrelease.outputs.release }}
  build:
    name: Build Release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs:
      - check_ver
    if: needs.check_ver.outputs.image_exists == 'not found'
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Docker Login
      uses: docker/login-action@v3.1.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push Docker images
      uses: docker/build-push-action@v5.3.0
      with:
        build-args: |
          RQ_VERSION=${{ needs.check_ver.outputs.release-ver }}
        context: ${{ env.DOCKER_CONTEXT }}
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.ORG_NAME }}/${{ env.IMAGE_NAME }}:{{ needs.check_ver.outputs.release-ver }}
          ${{ env.REGISTRY }}/${{ env.ORG_NAME }}/${{ env.IMAGE_NAME }}:latest
          
    
